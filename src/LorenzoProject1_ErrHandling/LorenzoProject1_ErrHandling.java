/**
******************************************************
***  Class Name: LorenzoProject1_ErrHandling.
***  Class Author:  Chris Lorenzo
******************************************************
*** This class allows the user to enter ten numbers
*** to find the Mean and Standard Deviation of the set.
*** It controls the methods to call exceptions and other
*** class methods to process the calculations.
******************************************************
*** Date: 4 September 2017
******************************************************
*** Changes: N/A
******************************************************
*/
package LorenzoProject1_ErrHandling;

import com.sun.glass.events.KeyEvent;
import java.awt.Color; 

/**
 *
 * @author Chris
 */
public class LorenzoProject1_ErrHandling extends javax.swing.JFrame {

    /**
     * Creates new form LorenzoProject1_ErrHandling
     */
    public LorenzoProject1_ErrHandling() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblSubTitle = new javax.swing.JLabel();
        txtInputBx = new javax.swing.JTextField();
        lblCurrNum = new javax.swing.JLabel();
        lblErrMsg = new javax.swing.JLabel();
        btnClear = new javax.swing.JButton();
        btnEnter = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblMeanResults = new javax.swing.JLabel();
        lblStdDResults = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Mean & Standard Deviation Calculator");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel1.setText("Mean & Standard Deviation Calculator");

        lblSubTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSubTitle.setText("Please enter " + inputLimit + " Integers, One at a Time.");

        txtInputBx.setNextFocusableComponent(btnEnter);
        txtInputBx.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtInputBxKeyPressed(evt);
            }
        });

        lblCurrNum.setFont(new java.awt.Font("Lucida Grande", 2, 10)); // NOI18N
        lblCurrNum.setForeground(new java.awt.Color(153, 153, 153));
        lblCurrNum.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCurrNum.setText("Enter number: 1");

        lblErrMsg.setFont(new java.awt.Font("Courier New", 0, 13)); // NOI18N
        lblErrMsg.setForeground(new java.awt.Color(255, 0, 0));
        lblErrMsg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        btnClear.setText("Clear");
        btnClear.setNextFocusableComponent(txtInputBx);
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnEnter.setText("Enter");
        btnEnter.setNextFocusableComponent(btnClear);
        btnEnter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnterActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 2, 13)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(153, 153, 153));
        jLabel4.setText("Calculation Results:");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Mean:");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Standard Deviation:");

        lblMeanResults.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lblMeanResults.setForeground(new java.awt.Color(0, 0, 255));

        lblStdDResults.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lblStdDResults.setForeground(new java.awt.Color(0, 0, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(84, 84, 84))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblSubTitle)
                        .addGap(130, 130, 130))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblCurrNum, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtInputBx, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(147, 147, 147))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnClear)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEnter)
                        .addGap(145, 145, 145))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(lblErrMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(lblMeanResults))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(lblStdDResults)))))
                .addGap(0, 43, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblSubTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtInputBx, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCurrNum))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblErrMsg)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnClear)
                    .addComponent(btnEnter))
                .addGap(30, 30, 30)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(lblMeanResults))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(lblStdDResults))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

/**
******************************************************
***  Method Name: btnClearActionPerformed.
***  Method Author:  Chris Lorenzo
******************************************************
*** This method performs clearing functions of the application's
*** form fields, returns the cursor to the input box for
*** the user, and sets the error message label to RED
*** font because other events change the color to black
*** and blue for success messages.
* 
*   Method Inputs:
*   — ActionEvent
*   Return Value:
*   — None
* 
******************************************************
*** Date: 4 September 2017
******************************************************
*** Changes: N/A
******************************************************
*/    
    
    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        txtInputBx.setText("");
        lblErrMsg.setText("");
        txtInputBx.requestFocus();
        lblErrMsg.setForeground(Color.RED);
        
    }//GEN-LAST:event_btnClearActionPerformed

/**
******************************************************
***  Method Name: btnEnterActionPerformed.
***  Method Author:  Chris Lorenzo
******************************************************
*** This method responds to the form's "Enter" button and 
*** converts the user input into a String variable, 
*** sets the input box to empty, and returns cursor focus
*** to the input box to signal to the user the input was
*** processed and is ready for more.  This method uses a
*** series of nested try-catches and if-else statements
*** to trap specific exceptions and handle them accordingly.
*** If input is valid, the method will process input values
*** into a local int array.  When local array is full, it will
*** instantiate a new userNumberArray object and pass the
*** local array as a parameter value so the object can
*** calculate the mean and standard deviation using its public
*** methods. These methods when called return a value to the mean
*** and Std D label for the user to view.
* 
*   Method Inputs:
*   — ActionEvent
*   Return Value:
*   — Mean of entered numbers via Double
*   — Standard Deviation of entered numbers via String
* 
******************************************************
*** Date: 4 September 2017
******************************************************
*** Changes: N/A
******************************************************
*/       
    
    private void btnEnterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnterActionPerformed
        // TODO add your handling code here:
        String userInput = txtInputBx.getText();
        txtInputBx.setText("");
        txtInputBx.requestFocus();
        lblErrMsg.setText("");
        
        try
        {
            if(maxEntered == false)
            {
                if(userInput.isEmpty())
                {
                    throw new NaNorNullException("Input Can Not Be Null!");
                }
                else
                {                    
                    try
                    {
                        inArray[inputCount] = Integer.parseInt(userInput);
                        inputCount++;
                        lblCurrNum.setText("Enter number " + (inputCount + 1) + ":");
                            if(inputCount == inputLimit)
                            {
                                maxEntered = true;
                                lblCurrNum.setText("");
                                userArray = new userNumArray(inArray);
                                lblMeanResults.setText(Double.toString(userArray.CalcMean()));
                                lblStdDResults.setText((userArray.CalcStdDeviation()));
                                lblErrMsg.setForeground(Color.BLUE);
                                lblErrMsg.setText("Calculations Completed, View Results Below:");
                            }
                    }
                    catch (NumberFormatException e)
                    {
                        lblErrMsg.setText("Input Must be an Integer!");
                    }
                }
            }
            else
            {
                throw new TooManyException("Can Not Enter More Numbers, 10 Max!");
            }  
        }
        catch (TooManyException | NaNorNullException | NullPointerException e)
        {
            lblErrMsg.setText(e.getMessage());
        }
    }//GEN-LAST:event_btnEnterActionPerformed

/**
******************************************************
***  Method Name: txtInputBxKeyPressed.
***  Method Author:  Chris Lorenzo
******************************************************
*** This method performs the exact same function as the
*** previous method "btnEnterActionPerformed", but does
*** so in response to the user pressing the "Enter" key
*** on the keyboard, as opposed to clicking on the "Enter"
*** button using the mouse.
* 
*   Method Inputs:
*   — KeyEvent
*   Return Value:
*   — Mean of entered numbers via Double
*   — Standard Deviation of entered numbers via String
* 
******************************************************
*** Date: 4 September 2017
******************************************************
*** Changes: N/A
******************************************************
*/    
    
    private void txtInputBxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtInputBxKeyPressed
        // TODO add your handling code here:
        //Found Code at https://www.youtube.com/watch?v=9WBIAUNNKCE
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            
            String userInput = txtInputBx.getText();
        txtInputBx.setText("");
        txtInputBx.requestFocus();
        lblErrMsg.setText("");
        
        try
        {
            if(maxEntered == false)
            {
                if(userInput.isEmpty())
                {
                    throw new NaNorNullException("Input Can Not Be Null!");
                }
                else
                {                    
                    try
                    {
                        inArray[inputCount] = Integer.parseInt(userInput);
                        inputCount++;
                        lblCurrNum.setText("Enter number " + (inputCount + 1) + ":");
                            if(inputCount == inputLimit)
                            {
                                maxEntered = true;
                                lblCurrNum.setText("");
                                userArray = new userNumArray(inArray);
                                lblMeanResults.setText(Double.toString(userArray.CalcMean()));
                                lblStdDResults.setText((userArray.CalcStdDeviation()));
                                lblErrMsg.setForeground(Color.BLUE);
                                lblErrMsg.setText("Calculations Completed, View Results Below:");
                            }
                    }
                    catch (NumberFormatException e)
                    {
                        lblErrMsg.setText("Input Must be an Integer!");
                    }
                }
            }
            else
            {
                throw new TooManyException("Can Not Enter More Numbers, 10 Max!");
            }  
        }
        catch (TooManyException | NaNorNullException | NullPointerException e)
        {
            lblErrMsg.setText(e.getMessage());
        }
        
        }
    }//GEN-LAST:event_txtInputBxKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LorenzoProject1_ErrHandling.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LorenzoProject1_ErrHandling.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LorenzoProject1_ErrHandling.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LorenzoProject1_ErrHandling.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LorenzoProject1_ErrHandling().setVisible(true);
            }
        });
    }

    private Integer inputCount = 0;                 //To count the number of successful user inputs
    private final Integer inputLimit = 10;          //To establish bounds for test and loops
    private final int[] inArray = new int[10];      //Create new blank array with 10 elements
    private userNumArray userArray;                 //For later use when main's array has been populated
    private Boolean maxEntered = false;             //to know when all numbers have been entered
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnEnter;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel lblCurrNum;
    private javax.swing.JLabel lblErrMsg;
    private javax.swing.JLabel lblMeanResults;
    private javax.swing.JLabel lblStdDResults;
    private javax.swing.JLabel lblSubTitle;
    private javax.swing.JTextField txtInputBx;
    // End of variables declaration//GEN-END:variables
}
